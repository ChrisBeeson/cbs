#!/usr/bin/env python3
import os, re

ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", ".."))

FIELDS = ["id","name","category","language"]

def read_field(lines, key):
    for ln in lines:
        m = re.match(r"\*\*%s\*\*:\s*(.+)\s*$" % re.escape(key), ln)
        if m:
            return m.group(1).strip()
    return ""

def subjects(lines):
    sub, pub = [], []
    for ln in lines:
        if re.search(r"^-\s*subscribe:\s*(.+)$", ln):
            sub.append(re.sub(r"^-\s*subscribe:\s*", "", ln).strip())
        if re.search(r"^-\s*publish:\s*(.+)$", ln):
            pub.append(re.sub(r"^-\s*publish:\s*", "", ln).strip())
    return sub, pub

def write_app_map(app_root, app_name):
    cells_dir = os.path.join(app_root, app_name, "cells")
    if not os.path.isdir(cells_dir):
        return False
    rows = []
    for cell in sorted(os.listdir(cells_dir)):
        ai_dir = os.path.join(cells_dir, cell, "ai")
        md = os.path.join(ai_dir, "spec.md")
        if not os.path.isfile(md):
            continue
        with open(md, 'r', encoding='utf-8') as f:
            lines = f.readlines()
        data = {k: read_field(lines, k) for k in FIELDS}
        sub, pub = subjects(lines)
        rows.append((app_name, cell, data, sub, pub))

    if not rows:
        return False

    out_dir = os.path.join(app_root, app_name, "ai")
    os.makedirs(out_dir, exist_ok=True)
    target = os.path.join(out_dir, "cell_map.md")
    with open(target, 'w', encoding='utf-8') as out:
        out.write("## CBS Cell Map\n\n")
        out.write("- Generated by cbs-agent/scripts/generate_cell_map.py\n\n")
        out.write("| App | Cell | Id | Category | Lang | Subscribes | Publishes |\n")
        out.write("| --- | --- | --- | --- | --- | --- | --- |\n")
        for app, cell, d, sub, pub in rows:
            out.write(f"| {app} | {cell} | {d.get('id','')} | {d.get('category','')} | {d.get('language','')} | {', '.join(sub)} | {', '.join(pub)} |\n")
    return True

# Generate per-application maps under applications/ and examples/applications/
for root in (os.path.join(ROOT, "applications"), os.path.join(ROOT, "examples", "applications")):
    if not os.path.isdir(root):
        continue
    for app in sorted(os.listdir(root)):
        write_app_map(root, app)
