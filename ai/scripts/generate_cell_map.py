#!/usr/bin/env python3
import os, re

ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", ".."))
OUT = os.path.join(ROOT, "ai", "docs", "cell_map.md")

FIELDS = ["id","name","category","language"]

def read_field(lines, key):
    for ln in lines:
        m = re.match(r"\*\*%s\*\*:\s*(.+)\s*$" % re.escape(key), ln)
        if m:
            return m.group(1).strip()
    return ""

def subjects(lines):
    sub, pub = [], []
    for ln in lines:
        if re.search(r"^-\s*subscribe:\s*(.+)$", ln):
            sub.append(re.sub(r"^-\s*subscribe:\s*", "", ln).strip())
        if re.search(r"^-\s*publish:\s*(.+)$", ln):
            pub.append(re.sub(r"^-\s*publish:\s*", "", ln).strip())
    return sub, pub

rows = []
apps_dir = os.path.join(ROOT, "applications")
if os.path.isdir(apps_dir):
    for app in sorted(os.listdir(apps_dir)):
        cells_dir = os.path.join(apps_dir, app, "cells")
        if not os.path.isdir(cells_dir):
            continue
        for cell in sorted(os.listdir(cells_dir)):
            ai_dir = os.path.join(cells_dir, cell, "ai")
            md = os.path.join(ai_dir, "spec.md")
            if not os.path.isfile(md):
                continue
            with open(md, 'r', encoding='utf-8') as f:
                lines = f.readlines()
            data = {k: read_field(lines, k) for k in FIELDS}
            sub, pub = subjects(lines)
            rows.append((app, cell, data, sub, pub))

os.makedirs(os.path.dirname(OUT), exist_ok=True)
with open(OUT, 'w', encoding='utf-8') as out:
    out.write("## CBS Cell Map\n\n")
    out.write("- Generated by ai/scripts/generate_cell_map.py\n\n")
    out.write("| App | Cell | Id | Category | Lang | Subscribes | Publishes |\n")
    out.write("| --- | --- | --- | --- | --- | --- | --- |\n")
    for app, cell, d, sub, pub in rows:
        out.write(f"| {app} | {cell} | {d.get('id','')} | {d.get('category','')} | {d.get('language','')} | {', '.join(sub)} | {', '.join(pub)} |\n")
